name: Performance Check

on:
  workflow_dispatch:
    
# on:
#   push:
#     branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest    
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn clean install "-DskipTests" "-Djacoco.skip=true" "-Ddependency-check.skip=true"
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: java-app
          path: '${{ github.workspace }}/target/*.jar'

  deploy_production:
    runs-on: ubuntu-latest
    needs: [k6_load_test,jmeter_test,lighthouse_check]
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: java-app
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'playground1'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_0BEA4837F01F4E4D9BCEE1ADAE79D999 }}
          package: '*.jar'
      - name: Display downloaded files
        run: ls -R

  deploy_front_end:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Run Unit Tests
        run: echo "Running unit tests..."

  lighthouse_check:
    runs-on: ubuntu-latest
    needs: deploy_front_end
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install jq
        run: sudo apt-get install jq

      - name: Install Lighthouse
        run: npm install -g lighthouse

      - name: Run Lighthouse and check performance
        run: |
          lighthouse --output=json --output-path=./lighthouse_report.json --quiet --chrome-flags="--headless --no-sandbox" "https://www.blazedemo.com"
          LIGHTHOUSE_SCORE=$(jq '.categories.performance.score * 100' ./lighthouse_report.json)
          echo "Performance score: $LIGHTHOUSE_SCORE"
          if [ $LIGHTHOUSE_SCORE -lt 60 ]; then
            echo "error: Performance score is below 60. Blocking PR."
            exit 1
          fi

      - name: Upload Lighthouse Report
        uses: actions/upload-artifact@v2
        with:
          name: lighthouse-report
          path: ./lighthouse_report.json
         

  deploy_Backend_performance:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Run Unit Tests
        run: echo "Running unit tests..."

  k6_load_test:
    name: k6 Load Test
    runs-on: ubuntu-latest
    needs: deploy_Backend_performance
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Run local k6 test
        uses: grafana/k6-action@v0.2.0
        with:
          filename: ${{ github.workspace }}/src/test/K6/perftest.js
          flags: --out json=results.json
      - name: Upload performance test results
        uses: actions/upload-artifact@v3
        with:
          name: k6-report
          path: results.json

  jmeter_test:
    runs-on: ubuntu-latest
    needs: [k6_load_test,lighthouse_check]
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Run JMeter tests
      run: |
        wget https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.4.1.tgz
        tar -xzf apache-jmeter-5.4.1.tgz
        apache-jmeter-5.4.1/bin/jmeter -n -t src/test/Jmeter/Test.jmx -l test_results.jtl
        
    - name: Upload JMeter Test Results
      uses: actions/upload-artifact@v2
      with:
        name: jmeter-results
        path: test_results.jtl